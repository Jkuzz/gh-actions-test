name: Test conditional actions
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
      console_backend: ${{ steps.filter.outputs.console_backend }}
      app: ${{ steps.filter.outputs.app }}
      api: ${{ steps.filter.outputs.api }}
      daemons: ${{ steps.filter.outputs.daemons }}
      isImportantBranch: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release') }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v3
    - name: Check files changed
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          packages:
            - 'src/packages/**'
            - '.github/**'
          console_backend:
            - 'src/console_backend/**'
            - '.github/**'
          app:
            - 'src/app/**'
            - '.github/**'
          api:
            - 'src/api/**'
            - '.github/**'
          daemons:
            - 'src/daemons/**'
            - '.github/**'

  install-dependencies-for-unit-tests:
    runs-on: ubuntu-latest
    needs: changes
    # Run if any files changed
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.packages == 'true' || needs.changes.outputs.console_backend == 'true' || needs.changes.outputs.app == 'true' || needs.changes.outputs.api == 'true' || needs.changes.outputs.daemons == 'true' }}
    steps:
    - name: Simulate workflow
      run: echo "install-dependencies-for-unit-tests"

  app-lint-and-unit-tests:
    needs: [changes, install-dependencies-for-unit-tests]
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.app == 'true' || needs.changes.outputs.packages == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - name: Simulate workflow
      run: echo "app-lint-and-unit-tests"

  api-lint-and-unit-tests:
    needs: [changes, install-dependencies-for-unit-tests]
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.api == 'true' || needs.changes.outputs.packages == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - name: Simulate workflow
      run: echo "api-lint-and-unit-tests"

  console_backend-lint-and-unit-tests:
    needs: [changes, install-dependencies-for-unit-tests]
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.console_backend == 'true' || needs.changes.outputs.packages == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - name: Simulate workflow
      run: echo "console_backend-lint-and-unit-tests"

  packages-lint-and-unit-tests:
    needs: [changes, install-dependencies-for-unit-tests]
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.packages == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - name: Simulate workflow
      run: echo "packages-lint-and-unit-tests"

  daemons-lint-and-unit-tests:
    needs: [changes, install-dependencies-for-unit-tests]
    if: ${{ needs.changes.outputs.isImportantBranch == 'true' || needs.changes.outputs.daemons == 'true' || needs.changes.outputs.packages == 'true' }}
    runs-on: ubuntu-latest
  
    steps:
    - name: Simulate workflow
      run: echo "daemons-lint-and-unit-tests"

